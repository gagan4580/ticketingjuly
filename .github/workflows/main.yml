name: Build and Deploy

on:
  push:
    branches:
      - main

env:
  ECR_REGISTRY: 481995630222.dkr.ecr.us-east-1.amazonaws.com
  ECR_REPOSITORY: ticketingapp
  EKS_APP_NAME: myticketingapp
  EKS_APP_NAMESPACE: argocd
  AWS_REGION: us-east-1
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Configure AWS CLI
        run: aws configure set default.region ${{ env.AWS_REGION }}

      - name: Build and push Docker image to ECR
        run: |
          # Build the Docker image
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$GITHUB_SHA -f auth/Dockerfile auth
          
          # Authenticate Docker to your ECR registry
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REGISTRY
          
          # Push the Docker image to ECR
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$GITHUB_SHA

      - name: Install Argo CD CLI
        run: |
          # Install Argo CD CLI (argocd)
          curl -sSL -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          chmod +x /usr/local/bin/argocd

      - name: Deploy to EKS using Argo CD
        run: |
          argocd login --insecure --username admin --password KIXDnhkz-XvgFXKv --grpc-web $EKS_APP_NAME.$EKS_APP_NAMESPACE.svc.$AWS_REGION.eks.amazonaws.com:443
          argocd app set $EKS_APP_NAME --sync-option Prune=true
          argocd app sync $EKS_APP_NAME
